{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789012",
		"name": "RestFull API - Warkop Rumah Seduh",
		"description": "API Collection untuk Sistem Pemesanan Warkop Rumah Seduh\n\n## Base URL\n- Development: http://localhost:8000\n- Production: https://your-domain.com\n\n## Authentication\nMenggunakan Laravel Sanctum dengan Bearer Token\n\n## Endpoints Available:\n- Authentication (Login, Logout, Me)\n- Product Management (CRUD)\n- Order Management\n- Analytics & Reports",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set('token', jsonData.token);",
									"    pm.test('Login successful', function () {",
									"        pm.expect(jsonData.token).to.not.be.undefined;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"okan@gmail.com\",\n  \"password\": \"12345678\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": ["{{base_url}}"],
							"path": ["api", "login"]
						},
						"description": "Login endpoint untuk mendapatkan authentication token\n\n**Request Body:**\n- email (string, required): Email user\n- password (string, required): Password user\n\n**Success Response (200):**\n```json\n{\n  \"message\": \"Login berhasil\",\n  \"token\": \"1|abc123...\",\n  \"user\": {\n    \"id\": 1,\n    \"name\": \"okan\",\n    \"email\": \"okan@gmail.com\"\n  }\n}\n```\n\n**Error Response (401):**\n```json\n{\n  \"message\": \"Email atau password salah\"\n}\n```"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"okan@gmail.com\",\n  \"password\": \"12345678\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/login",
									"host": ["{{base_url}}"],
									"path": ["api", "login"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Login berhasil\",\n  \"token\": \"1|abc123def456ghi789\",\n  \"user\": {\n    \"id\": 1,\n    \"name\": \"okan\",\n    \"email\": \"okan@gmail.com\",\n    \"created_at\": \"2025-01-01T00:00:00.000000Z\",\n    \"updated_at\": \"2025-01-01T00:00:00.000000Z\"\n  }\n}"
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/logout",
							"host": ["{{base_url}}"],
							"path": ["api", "logout"]
						},
						"description": "Logout endpoint untuk menghapus authentication token\n\n**Headers:**\n- Authorization: Bearer {token}\n\n**Success Response (200):**\n```json\n{\n  \"message\": \"Logout berhasil\"\n}\n```"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/logout",
									"host": ["{{base_url}}"],
									"path": ["api", "logout"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\": \"Logout berhasil\"\n}"
						}
					]
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/me",
							"host": ["{{base_url}}"],
							"path": ["api", "me"]
						},
						"description": "Mendapatkan informasi user yang sedang login\n\n**Headers:**\n- Authorization: Bearer {token}\n\n**Success Response (200):**\n```json\n{\n  \"user\": {\n    \"id\": 1,\n    \"name\": \"okan\",\n    \"email\": \"okan@gmail.com\"\n  }\n}\n```"
					},
					"response": []
				}
			]
		},
		{
			"name": "üçï Product Management",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/products",
							"host": ["{{base_url}}"],
							"path": ["api", "products"]
						},
						"description": "Mendapatkan semua produk yang tersedia\n\n**Success Response (200):**\n```json\n[\n  {\n    \"id\": 1,\n    \"name\": \"Cappuccino\",\n    \"image\": \"https://example.com/cappuccino.jpg\",\n    \"price\": 10000.00,\n    \"category\": \"coffee\",\n    \"created_at\": \"2025-01-01T00:00:00.000000Z\",\n    \"updated_at\": \"2025-01-01T00:00:00.000000Z\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Matcha Latte\",\n    \"image\": \"https://example.com/matcha.jpg\",\n    \"price\": 15000.00,\n    \"category\": \"non_coffee\"\n  }\n]\n```"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/products",
									"host": ["{{base_url}}"],
									"path": ["api", "products"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"Cappuccino\",\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Cappuccino_in_original.jpg/1200px-Cappuccino_in_original.jpg\",\n    \"price\": \"10000.00\",\n    \"category\": \"coffee\",\n    \"created_at\": \"2025-01-01T00:00:00.000000Z\",\n    \"updated_at\": \"2025-01-01T00:00:00.000000Z\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Matcha Latte\",\n    \"image\": \"https://cdn.loveandlemons.com/wp-content/uploads/2023/06/iced-matcha-latte.jpg\",\n    \"price\": \"15000.00\",\n    \"category\": \"non_coffee\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Nasi Goreng\",\n    \"image\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSmJMddrqmH8SkxcWRq3IS-BTcIr4KRiHz3Zg&s\",\n    \"price\": \"18000.00\",\n    \"category\": \"makanan\"\n  },\n  {\n    \"id\": 4,\n    \"name\": \"kentang goreng\",\n    \"image\": \"https://cdn0-production-images-kly.akamaized.net/j5gE9hDy1k0Kk7m-MGAbmVG9dJ8=/1200x675/smart/filters:quality(75):strip_icc():format(jpeg)/kly-media-production/medias/970871/original/021248500_1440846143-header_chiantilvpa_com.jpg\",\n    \"price\": \"10000.00\",\n    \"category\": \"cemilan\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Espresso",
									"type": "text"
								},
								{
									"key": "category",
									"value": "coffee",
									"type": "text",
									"description": "coffee, non_coffee, makanan, cemilan"
								},
								{
									"key": "price",
									"value": "8000",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"description": "Optional image file (jpeg, png, jpg, gif, max 2MB)"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/products",
							"host": ["{{base_url}}"],
							"path": ["api", "products"]
						},
						"description": "Membuat produk baru (Requires Authentication)\n\n**Headers:**\n- Authorization: Bearer {token}\n\n**Form Data:**\n- name (string, required): Nama produk\n- category (enum, required): coffee, non_coffee, makanan, cemilan\n- price (numeric, required): Harga produk\n- image (file, optional): Gambar produk (jpeg, png, jpg, gif, max 2MB)\n\n**Success Response (201):**\n```json\n{\n  \"message\": \"Produk berhasil ditambahkan\",\n  \"product\": {\n    \"id\": 5,\n    \"name\": \"Espresso\",\n    \"category\": \"coffee\",\n    \"price\": 8000,\n    \"image\": \"products/abc123.jpg\"\n  }\n}\n```\n\n**Validation Error (422):**\n```json\n{\n  \"message\": \"The given data was invalid.\",\n  \"errors\": {\n    \"name\": [\"The name field is required.\"],\n    \"category\": [\"The selected category is invalid.\"]\n  }\n}\n```"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Espresso Updated",
									"type": "text"
								},
								{
									"key": "category",
									"value": "coffee",
									"type": "text"
								},
								{
									"key": "price",
									"value": "9000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/products/1",
							"host": ["{{base_url}}"],
							"path": ["api", "products", "1"]
						},
						"description": "Update produk berdasarkan ID (Requires Authentication)\n\n**Headers:**\n- Authorization: Bearer {token}\n\n**URL Parameters:**\n- id (integer): ID produk yang akan diupdate\n\n**Form Data:**\n- name (string, required): Nama produk\n- category (enum, required): coffee, non_coffee, makanan, cemilan\n- price (numeric, required): Harga produk\n- image (file, optional): Gambar produk baru\n\n**Success Response (200):**\n```json\n{\n  \"message\": \"Produk berhasil diperbarui\",\n  \"product\": {\n    \"id\": 1,\n    \"name\": \"Espresso Updated\",\n    \"category\": \"coffee\",\n    \"price\": 9000\n  }\n}\n```"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/products/1",
							"host": ["{{base_url}}"],
							"path": ["api", "products", "1"]
						},
						"description": "Hapus produk berdasarkan ID (Requires Authentication)\n\n**Headers:**\n- Authorization: Bearer {token}\n\n**URL Parameters:**\n- id (integer): ID produk yang akan dihapus\n\n**Success Response (200):**\n```json\n{\n  \"message\": \"Produk berhasil dihapus\"\n}\n```\n\n**Not Found Response (404):**\n```json\n{\n  \"message\": \"Produk tidak ditemukan\"\n}\n```"
					},
					"response": []
				}
			]
		},
		{
			"name": "üì¶ Order Management",
			"item": [
				{
					"name": "Get All Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders",
							"host": ["{{base_url}}"],
							"path": ["api", "orders"]
						},
						"description": "Mendapatkan semua pesanan dengan detail items\n\n**Success Response (200):**\n```json\n[\n  {\n    \"id\": 1,\n    \"order_id\": \"ORD-abc123\",\n    \"customer_name\": \"John Doe\",\n    \"customer_meja\": \"A1\",\n    \"customer_phone\": \"081234567890\",\n    \"notes\": \"Gula sedikit\",\n    \"total_price\": 25000.00,\n    \"status\": \"Pending\",\n    \"payment_method\": \"midtrans\",\n    \"created_at\": \"2025-01-01T00:00:00.000000Z\",\n    \"order_items\": [\n      {\n        \"id\": 1,\n        \"product_name\": \"Cappuccino\",\n        \"quantity\": 2,\n        \"price\": 10000.00,\n        \"subtotal\": 20000.00\n      }\n    ]\n  }\n]\n```"
					},
					"response": []
				},
				{
					"name": "Get Order by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/1",
							"host": ["{{base_url}}"],
							"path": ["api", "orders", "1"]
						},
						"description": "Mendapatkan detail pesanan berdasarkan ID\n\n**URL Parameters:**\n- id (integer): ID pesanan\n\n**Success Response (200):**\n```json\n{\n  \"id\": 1,\n  \"order_id\": \"ORD-abc123\",\n  \"customer_name\": \"John Doe\",\n  \"customer_meja\": \"A1\",\n  \"customer_phone\": \"081234567890\",\n  \"notes\": \"Gula sedikit\",\n  \"total_price\": 25000.00,\n  \"status\": \"Pending\",\n  \"payment_method\": \"midtrans\",\n  \"order_items\": [...]\n}\n```\n\n**Not Found Response (404):**\n```json\n{\n  \"message\": \"Order tidak ditemukan\"\n}\n```"
					},
					"response": []
				},
				{
					"name": "Create Cash Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Smith\",\n  \"phone\": \"081987654321\",\n  \"customer_meja\": \"B2\",\n  \"note\": \"Tanpa gula\",\n  \"items\": [\n    {\n      \"name\": \"Cappuccino\",\n      \"price\": 10000,\n      \"quantity\": 2\n    },\n    {\n      \"name\": \"Nasi Goreng\",\n      \"price\": 18000,\n      \"quantity\": 1\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/order/cash",
							"host": ["{{base_url}}"],
							"path": ["api", "order", "cash"]
						},
						"description": "Membuat pesanan cash (langsung dibayar) - Requires Authentication\n\n**Headers:**\n- Authorization: Bearer {token}\n- Content-Type: application/json\n\n**Request Body:**\n- name (string, required): Nama pelanggan\n- phone (string, required): Nomor telepon\n- customer_meja (string, required): Nomor meja\n- note (string, optional): Catatan pesanan\n- items (array, required): Array item pesanan\n  - name (string, required): Nama produk\n  - price (numeric, required): Harga satuan\n  - quantity (integer, required): Jumlah\n\n**Success Response (200):**\n```json\n{\n  \"message\": \"Pesanan berhasil disimpan dan dibayar.\",\n  \"order\": {\n    \"id\": 2,\n    \"order_id\": \"INV-1640995200\",\n    \"customer_name\": \"Jane Smith\",\n    \"total_price\": 38000,\n    \"status\": \"Selesai\",\n    \"order_items\": [...]\n  }\n}\n```\n\n**Validation Error (422):**\n```json\n{\n  \"errors\": {\n    \"name\": [\"The name field is required.\"],\n    \"items\": [\"The items field is required.\"]\n  }\n}\n```"
					},
					"response": []
				}
			]
		},
		{
			"name": "üìä Analytics & Reports",
			"item": [
				{
					"name": "Get Revenue Data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/pendapatan?type=day&year=2025&month=1",
							"host": ["{{base_url}}"],
							"path": ["api", "pendapatan"],
							"query": [
								{
									"key": "type",
									"value": "day",
									"description": "day, week, month"
								},
								{
									"key": "year",
									"value": "2025",
									"description": "Tahun (required)"
								},
								{
									"key": "month",
									"value": "1",
									"description": "Bulan (optional)"
								},
								{
									"key": "day",
									"value": "",
									"description": "Hari (optional)",
									"disabled": true
								}
							]
						},
						"description": "Mendapatkan data pendapatan berdasarkan periode\n\n**Query Parameters:**\n- type (enum): day, week, month (default: day)\n- year (integer, required): Tahun\n- month (integer, optional): Bulan (1-12)\n- day (integer, optional): Hari (1-31)\n\n**Success Response (200):**\n```json\n[\n  {\n    \"label\": \"2025-01-01\",\n    \"jumlah\": 150000\n  },\n  {\n    \"label\": \"2025-01-02\",\n    \"jumlah\": 200000\n  },\n  {\n    \"label\": \"2025-01-03\",\n    \"jumlah\": 175000\n  }\n]\n```\n\n**Note:** Hanya menghitung pesanan dengan status 'Selesai'"
					},
					"response": [
						{
							"name": "Daily Revenue",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/pendapatan?type=day&year=2025&month=1",
									"host": ["{{base_url}}"],
									"path": ["api", "pendapatan"],
									"query": [
										{
											"key": "type",
											"value": "day"
										},
										{
											"key": "year",
											"value": "2025"
										},
										{
											"key": "month",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n    \"label\": \"2025-01-15\",\n    \"jumlah\": \"33000\"\n  },\n  {\n    \"label\": \"2025-01-16\",\n    \"jumlah\": \"28000\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get Best Selling Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/produk-terlaris?year=2025&month=1",
							"host": ["{{base_url}}"],
							"path": ["api", "produk-terlaris"],
							"query": [
								{
									"key": "year",
									"value": "2025",
									"description": "Tahun (required)"
								},
								{
									"key": "month",
									"value": "1",
									"description": "Bulan (optional)"
								}
							]
						},
						"description": "Mendapatkan data produk terlaris berdasarkan periode\n\n**Query Parameters:**\n- year (integer, required): Tahun\n- month (integer, optional): Bulan (1-12)\n\n**Success Response (200):**\n```json\n[\n  {\n    \"product_name\": \"Cappuccino\",\n    \"total_terjual\": 45\n  },\n  {\n    \"product_name\": \"Nasi Goreng\",\n    \"total_terjual\": 32\n  },\n  {\n    \"product_name\": \"Matcha Latte\",\n    \"total_terjual\": 28\n  }\n]\n```\n\n**Note:** Data diurutkan berdasarkan total terjual (descending)"
					},
					"response": [
						{
							"name": "Best Selling Products",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/produk-terlaris?year=2025&month=1",
									"host": ["{{base_url}}"],
									"path": ["api", "produk-terlaris"],
									"query": [
										{
											"key": "year",
											"value": "2025"
										},
										{
											"key": "month",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n    \"product_name\": \"Matcha Latte\",\n    \"total_terjual\": \"1\"\n  },\n  {\n    \"product_name\": \"Nasi Goreng\",\n    \"total_terjual\": \"2\"\n  },\n  {\n    \"product_name\": \"Cappuccino\",\n    \"total_terjual\": \"3\"\n  }\n]"
						}
					]
			},
			{
				"name": "üõ†Ô∏è Utility Endpoints",
				"item": [
					{
						"name": "Health Check",
						"request": {
							"method": "GET",
							"header": [
								{
									"key": "Accept",
									"value": "application/json"
								}
							],
							"url": {
								"raw": "{{base_url}}/api/health",
								"host": ["{{base_url}}"],
								"path": ["api", "health"]
							},
							"description": "Endpoint untuk mengecek status API\n\n**Success Response (200):**\n```json\n{\n  \"status\": \"OK\",\n  \"message\": \"API is running\",\n  \"timestamp\": \"2025-01-01T00:00:00.000000Z\"\n}\n```"
						},
						"response": [
							{
								"name": "Success Response",
								"originalRequest": {
									"method": "GET",
									"header": [],
									"url": {
										"raw": "{{base_url}}/api/health",
										"host": ["{{base_url}}"],
										"path": ["api", "health"]
									}
								},
								"status": "OK",
								"code": 200,
								"_postman_previewlanguage": "json",
								"header": [],
								"cookie": [],
								"body": "{\n  \"status\": \"OK\",\n  \"message\": \"API is running\",\n  \"timestamp\": \"2025-01-01T12:00:00.000000Z\",\n  \"version\": \"1.0.0\"\n}"
							}
						]
					},
					{
						"name": "Get Server Info",
						"request": {
							"method": "GET",
							"header": [
								{
									"key": "Accept",
									"value": "application/json"
								}
							],
							"url": {
								"raw": "{{base_url}}/api/info",
								"host": ["{{base_url}}"],
								"path": ["api", "info"]
							},
							"description": "Endpoint untuk mendapatkan informasi server dan aplikasi\n\n**Success Response (200):**\n```json\n{\n  \"app_name\": \"Warkop Rumah Seduh API\",\n  \"version\": \"1.0.0\",\n  \"laravel_version\": \"10.x\",\n  \"php_version\": \"8.1\",\n  \"environment\": \"local\"\n}\n```"
						},
						"response": []
					}
				]
			}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Global pre-request script untuk logging",
							"console.log('üöÄ Making request to: ' + pm.request.url);",
							"console.log('üìù Method: ' + pm.request.method);",
							"",
							"// Check if token exists for authenticated requests",
							"if (pm.request.headers.has('Authorization')) {",
							"    const token = pm.environment.get('token');",
							"    if (!token || token === '') {",
							"        console.warn('‚ö†Ô∏è Warning: No authentication token found. Please login first.');",
							"    }",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// Global test script untuk validasi response",
							"pm.test('‚úÖ Response time is acceptable (< 2000ms)', function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test('‚úÖ Response has correct Content-Type', function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
							"});",
							"",
							"pm.test('‚úÖ Response status is valid', function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204, 400, 401, 404, 422, 500]);",
							"});",
							"",
							"// Log response details",
							"console.log('üìä Response Status: ' + pm.response.code + ' ' + pm.response.status);",
							"console.log('‚è±Ô∏è Response Time: ' + pm.response.responseTime + 'ms');",
							"",
							"// Handle error responses",
							"if (pm.response.code >= 400) {",
							"    console.error('‚ùå Error Response:', pm.response.json());",
							"} else {",
							"    console.log('‚úÖ Success Response');",
							"}"
						]
					}
				}
			],
			"variable": [
				{
					"key": "base_url",
					"value": "http://localhost:8000",
					"type": "string",
					"description": "Base URL untuk API development server"
				},
				{
					"key": "token",
					"value": "",
					"type": "string",
					"description": "Authentication token (akan diisi otomatis setelah login)"
				},
				{
					"key": "user_id",
					"value": "",
					"type": "string",
					"description": "ID user yang sedang login"
				},
				{
					"key": "order_id",
					"value": "",
					"type": "string",
					"description": "ID pesanan untuk testing"
				},
				{
					"key": "product_id",
					"value": "",
					"type": "string",
					"description": "ID produk untuk testing"
				}
			]
		}
	]
}
		
					